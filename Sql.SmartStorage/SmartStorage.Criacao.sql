
CREATE TABLE IF NOT EXISTS TB_USER (
    "ID"            UUID PRIMARY KEY,
    "NAME"          VARCHAR(240)    NOT NULL,
    "EMAIL"         VARCHAR(240) UNIQUE NOT NULL,
    "PASSWORD"      VARCHAR(240)    NOT NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_PERMISSION (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(240) UNIQUE  NOT NULL,
    "NAME"          VARCHAR(240) UNIQUE  NOT NULL,
    "START_DATE"    TIMESTAMP     NOT NULL,
    "END_DATE"      TIMESTAMP     NULL
);

CREATE TABLE IF NOT EXISTs TB_USER_PERMISSION (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "USER_ID"       UUID REFERENCES TB_USER("ID") NOT NULL,
    "PERMISSION_ID" INTEGER REFERENCES TB_PERMISSION("ID") NOT NULL,
    "START_DATE"    TIMESTAMP   NOT NULL,
    "END_DATE"      TIMESTAMP   NULL
);

CREATE TABLE IF NOT EXISTs TB_FUNCTIONALITY (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(240) UNIQUE   NOT NULL,
    "NAME"          VARCHAR(240) UNIQUE   NOT NULL,
    "ROUTE"         VARCHAR(240) UNIQUE  NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_PERMISSION_FUNCTIONALITY (
    "ID"                SERIAL PRIMARY KEY NOT NULL,
    "PERMISSION_ID"     INTEGER REFERENCES TB_PERMISSION("ID") NOT NULL,
    "FUNCTIONALITY_ID"  INTEGER REFERENCES TB_FUNCTIONALITY("ID") NOT NULL,
    "CAN_READ"          BOOLEAN NOT NULL,
    "CAN_EDIT"          BOOLEAN NOT NULL,
    "CAN_REMOVE"        BOOLEAN NOT NULL,
    "START_DATE"        TIMESTAMP   NOT NULL,
    "END_DATE"          TIMESTAMP   NULL
);

CREATE TABLE IF NOT EXISTs TB_INVENTORY_FLOOR (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(240)  UNIQUE  NOT NULL,
    "NAME"          VARCHAR(240)  UNIQUE  NOT NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_INVENTORY_HALLWAY (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(240)  UNIQUE  NOT NULL,
    "NAME"          VARCHAR(240) UNIQUE   NOT NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_INVENTORY_SIDE (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(8)   UNIQUE   NOT NULL,
    "NAME"          VARCHAR(240) UNIQUE   NOT NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_INVENTORY_SHELF (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(240)  UNIQUE    NOT NULL,
    "NAME"          VARCHAR(240)  UNIQUE  NOT NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_INVENTORY_SLOT (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(240)  UNIQUE    NOT NULL,
    "NAME"          VARCHAR(240)  UNIQUE  NOT NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_PRODUCT (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(240)  UNIQUE    NOT NULL,
    "NAME"          VARCHAR(240)    NOT NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_INVENTORY_ADDRESSING (
    "ID"            SERIAL PRIMARY KEY NOT NULL,
    "CODE"          VARCHAR(240)    UNIQUE    NOT NULL,
    "NAME"          VARCHAR(240)    UNIQUE    NOT NULL,
    "FLOOR_ID"      INTEGER REFERENCES TB_INVENTORY_FLOOR("ID") NOT NULL,
    "HALLWAY_ID"    INTEGER REFERENCES TB_INVENTORY_HALLWAY("ID") NOT NULL,
    "SIDE_ID"       INTEGER REFERENCES TB_INVENTORY_SIDE("ID") NOT NULL,
    "SHELF_ID"      INTEGER REFERENCES TB_INVENTORY_SHELF("ID") NOT NULL,
    "SLOT_ID"       INTEGER REFERENCES TB_INVENTORY_SLOT("ID") NOT NULL,
    "PRODUCT_ID"    INTEGER REFERENCES TB_PRODUCT("ID") NOT NULL,
    "START_DATE"    TIMESTAMP       NOT NULL,
    "END_DATE"      TIMESTAMP       NULL
);

CREATE TABLE IF NOT EXISTs TB_ORDER_PICKING (
    "ID"                SERIAL PRIMARY KEY NOT NULL,
    "SALES_ORDER_ID"    VARCHAR(320)        NOT NULL,
    "SELLER"            VARCHAR(240)        NOT NULL,
    "ORDER_NUMBER"      INTEGER             NOT NULL,
    "SEPARATOR"         VARCHAR(240)        NOT NULL,
    "STATUS"            INTEGER             NOT NULL,
    "START_DATE"        TIMESTAMP           NOT NULL,
    "END_DATE"          TIMESTAMP           NULL
);

CREATE TABLE IF NOT EXISTs TB_ORDER_PICKING_PRODUCT (
    "ID"                SERIAL PRIMARY KEY NOT NULL,
    "ORDER_PICKING_ID"  INTEGER REFERENCES TB_ORDER_PICKING("ID") NOT NULL,
    "PRODUCT_ID"        INTEGER REFERENCES TB_PRODUCT("ID") NOT NULL
);




/* 
DROP TABLE IF EXISTS TB_USER CASCADE;
DROP TABLE IF EXISTS TB_PERMISSION CASCADE;
DROP TABLE IF EXISTS TB_USER_PERMISSION CASCADE;
DROP TABLE IF EXISTS TB_FUNCTIONALITY CASCADE;
DROP TABLE IF EXISTS TB_PERMISSION_FUNCTIONALITY CASCADE;
DROP TABLE IF EXISTS TB_INVENTORY_FLOOR CASCADE;
DROP TABLE IF EXISTS TB_INVENTORY_HALLWAY CASCADE;
DROP TABLE IF EXISTS TB_INVENTORY_SIDE CASCADE;
DROP TABLE IF EXISTS TB_INVENTORY_SHELF CASCADE;
DROP TABLE IF EXISTS TB_INVENTORY_SLOT CASCADE;
DROP TABLE IF EXISTS TB_PRODUCT CASCADE;
DROP TABLE IF EXISTS TB_INVENTORY_ADDRESSING CASCADE;
DROP TABLE IF EXISTS TB_ORDER_PICKING CASCADE;
DROP TABLE IF EXISTS TB_ORDER_PICKING_PRODUCT CASCADE;
*/
























